/* Box sizing reset, see paul irish article for details */
html { box-sizing: border-box; }
*, *:before, *:after { box-sizing: inherit; }

html, body {
  margin: 0;
  font-family: 'Source Sans Pro';
  font-size: 16;
  line-height: 1.5;
  background-color: #F7FAFE;
}

header {
  background-color: #523B99;
  text-align: center;
}

.Marquee {
  height: 400px;
  background: #5C42AB;
  text-align: center;
  color: #fff;
  font-size: 1.5em;
  border-bottom: 1px solid #fff;
  display: flex;
  justify-content: center;
  flex-direction: column;
}
.Marquee:before {
  content: ' ';
  display: table;
  clear: both;
}

.Heading { margin: 0; position: relative; }
.Subheading { margin-top: -.25em; }

.SubjectList {
  margin: 4em auto 0;
  display: flex;
  justify-content: center;
}

.ListItem {
  background: #fff;
  border: 1px solid #eee;
  border-bottom-color: #ddd;
  box-shadow: 0 1px 1px rgba(0,0,0,.15);
  padding: .75em 1em;
  font-weight: bold;
  color: #444;
  font-size: 22px;
  margin-right: 1em;
  margin-bottom: 1em;
  border-radius: 4px;
  transition: all 0.3s ease-out;
  display: inline-block;
  text-decoration: none;
  flex-shrink
}
.ListItem:hover { cursor: pointer; box-shadow: 0 2px 3px rgba(0,0,0,.15);}


.ListItem--outline {
  border: 1px dashed #ccc;
  background: transparent;
  color: #c0c0c0;
  box-shadow: none;
  text-shadow: 0px 1px 0px #fff;
}
.ListItem--outline:hover {
  box-shadow: none;
}

.Icon--plus {
  background-image: url('/images/arrows_circle_plus.svg');
  background-size: cover;
  width: 25px;
  height: 25px;
  display: inline-block;
  position: relative;
  top: 5px;
  left: -5px;
}


.Logo {
  font-size: 25px;
  font-weight: 800;
  text-transform: uppercase;
  background-color: rgba(0,0,0,.1);
  border-bottom: 1px solid rgba(0,0,0,.05);
  color: #E1DDED;
}

.Name {
  padding: 25px 0 20px;
  display: inline-block;
  text-shadow: 0px 1px 2px rgba(0,0,0,.2);
}

.Pencil {
  background-image: url('/images/software_pencil.svg');
  width: 40px;
  height: 40px;
  display: inline-block;
  background-size: cover;
  position: absolute;
  top: 17px;
  margin-left: -40px;
  -webkit-filter: drop-shadow(0px 1px 2px rgba(0,0,0,.2));
}


/* From other project aboe here */
/* -------------------------------------------------------------------------- */

.App {
}

.WelcomeView {
  text-align: center;
}

/* Base grid styles */
.Grid { display: flex; }
.Grid-cell { flex: 1; }

/* With gutters */
.Grid--gutters { margin: -1em 0 0 -1em; }
.Grid--gutters > .Grid-cell { padding: 1em 0 0 1em; }

/* Alignment per row */
.Grid--top { align-items: flex-start; }
.Grid--bottom { align-items: flex-end; }
.Grid--center { align-items: center; }

/* Alignment per cell */
.Grid-cell--top { align-self: flex-start; }
.Grid-cell--bottom { align-self: flex-end; }
.Grid-cell--center { align-self: center; }

.scrollbar {
  -webkit-transform: translate3d(0,0,0);
  -webkit-overflow-scrolling: touch;
}
.scrollbar::-webkit-scrollbar {
  height: 13px;
  width: 13px;
}
.scrollbar::-webkit-scrollbar-track-piece {
  background: rgba(0,0,0,.15);
}
.scrollbar::-webkit-scrollbar-button {
  display: block;
  height: 5px;
  width: 5px;
}
.scrollbar::-webkit-scrollbar-track-piece:vertical:start {
    border-radius: 5px 5px 0 0
}
.scrollbar::-webkit-scrollbar-track-piece:vertical:end {
    border-radius: 0 0 5px 5px
}
.scrollbar::-webkit-scrollbar-track-piece:horizontal:start {
    border-radius: 5px 0 0 5px
}
.scrollbar::-webkit-scrollbar-track-piece:horizontal:end {
    border-radius: 0 5px 5px 0
}
.scrollbar::-webkit-scrollbar-thumb:horizontal,.scrollbar::-webkit-scrollbar-thumb:vertical {
    background: rgba(255,255,255,.4);
    border-radius: 5px;
    display: block;
    height: 50px
}
.scrollbar::-webkit-scrollbar-button:end:increment,.scrollbar::-webkit-scrollbar-button:start:decrement {
    background: 0 0;
    display: none
}

/*
 * Modals (react-modal customization)
 * .ReactModal__xx indicates overriding a class name provided by the package.
 * .Modal--xxx indicates custom modifier class from us.
 */
.ReactModal__Overlay {
  background-color: rgba(0,0,0,.3);
  transition: background-color 150ms ease-out;
}

.ReactModal__Content {
  opacity: 0;
  border: none;
  box-shadow: 0 1px 15px rgba(0, 0, 0, 0.3);
}

.ReactModal__Content--after-open {
  opacity: 1;
  transition: all 300ms ease-out;
}

.Modal__footer {
  background: #EDF6FE;
  border-top: 1px solid #E0E9F1;
  border-radius: 0 4px 4px 0;
  position: absolute;
  bottom: 0;
  left: 0;
  height: 4em;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 2;
}

.Modal__cross {
  position: absolute;
  top: -6px;
  right: 7px;
  color: #999;
  font-size: 2em;
  text-decoration: none;
}

.Modal--addCourse {
  width: 200px;
  height: 150px;
  top: 50%;
  left: 50%;
  margin-top: -75px;
  margin-left: -100px;
  box-shadow: 0 1px 15px rgba(0, 0, 0, 0.3);
  border: 1px solid #FFF;
}

.Modal--lectureComposer {
  width: 360px;
  height: 200px;
  top: 50%;
  left: 50%;
  margin-top: -100px;
  margin-left: -180px;
  padding-top: 2em;
  text-align: center;
}

.Modal--questionComposer {
  width: 360px;
  height: 544px;  /* 480 + 64 (footer height) */
  left: 50%;
  margin-left: -180px;
  top: 50%;
  margin-top: -240px;
  padding-top: 2em;
  text-align: center;
}

/*
 * Transparent label/input pair
 * This should be made into a component. Basically you have a label that sits
 * behind the textarea that disappears when there is content in the input.
 */
.AdvancedInput {
  height: 100%;
  position: relative;
  text-align: center;
  font-size: 22px;
}

.TransparentLabel {
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  position: absolute;
  z-index: 0;
  transition: opacity 150ms ease-in-out;
  color: #999;
}

.TransparentLabel--hidden {
  opacity: 0;
}

textarea {
  width: 100%;
  height: 100%;
  background-color: transparent;
  position: relative;
  z-index: 1;
  padding: 0;
  margin: 0;
  border: none;
  text-align: center;
}

textarea:focus {
  outline: none;
}

input {
  width: 100%;
  background-color: transparent;
  position: relative;
  z-index: 1;
  padding: 0;
  margin: 0;
  border: none;
  text-align: center;
}

input:focus {
  outline: none;
}



/* Drawing Canvas */
#displayCanvas {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
}
#canvas {
  position: absolute;
  left: 0;
  top: 0;
}
#canvas:hover {
  cursor: crosshair;
}
